.TH ISOLDERTHAN 1 "June 2025" "Version 1.0" "File Age Verification Tool"
.SH NAME
isOlderThan \- check if a file is older than specified time period
.SH SYNOPSIS
.B isOlderThan
.I filepath
.RI [ options ]
.SH DESCRIPTION
.B isOlderThan
checks whether a file is older than a specified time period. The program compares the file's modification time against a reference time calculated from the current time minus the specified age threshold.

By default, if no time specification is provided, the program checks if the file is older than 6 months.

The reference time calculation can use either the exact current time (with \fB\-exact\fR) or the end of the previous day (default behavior), providing flexibility for different use cases such as daily maintenance scripts.

The program implements robust input validation, comprehensive error handling, and optimized performance for batch processing operations.
.SH OPTIONS
.SS Required Parameter
.TP
.I filepath
Path to the file to check. Can be absolute or relative path. Supports Unicode filenames and paths with spaces (use quotes when necessary).
.SS Optional Time Parameters
.TP
.BI \-days " count"
Number of days. This parameter excludes all other time parameters (\fB\-weeks\fR, \fB\-months\fR, \fB\-years\fR). Range: 1-365000 (approximately 1000 years).
.TP
.BI \-weeks " count"
Number of weeks. This parameter excludes all other time parameters (\fB\-days\fR, \fB\-months\fR, \fB\-years\fR). Range: 1-52000 (approximately 1000 years).
.TP
.BI \-months " count"
Number of months. Can be combined with \fB\-years\fR, but when combined, the maximum value is 11. When used alone, range: 1-12000 (approximately 1000 years).
.TP
.BI \-years " count"
Number of years. Can be combined with \fB\-months\fR. Range: 1-1000 for practical usage and system compatibility.
.SS Time Reference Mode
.TP
.B \-exact
Use exact current program execution time as reference instead of end of previous day (default).
.SH PARAMETER RULES
.TP
\(bu
\fB\-days\fR excludes all other time parameters
.TP
\(bu
\fB\-weeks\fR excludes all other time parameters
.TP
\(bu
\fB\-months\fR can only be combined with \fB\-years\fR
.TP
\(bu
When \fB\-months\fR and \fB\-years\fR are combined, months must be â‰¤ 11
.TP
\(bu
Default behavior: end of previous day reference time
.TP
\(bu
\fB\-exact\fR mode: current program execution time reference
.TP
\(bu
All numeric values must be positive integers
.TP
\(bu
Leading zeros in numbers are permitted (e.g., "030" = 30)
.SH INPUT VALIDATION
The program implements enhanced input validation using strtol() for robust parsing:
.TP
\(bu
Numeric parameters must contain only digits (leading zeros are allowed)
.TP
\(bu
Mixed alphanumeric strings like "30abc" are rejected
.TP
\(bu
Overflow detection for values exceeding system limits
.TP
\(bu
Range validation: parameters limited to practical ranges
.TP
\(bu
Enhanced error messages specify exactly what went wrong
.SH TIME CALCULATION
The program performs accurate calendar arithmetic, properly handling:
.TP
\(bu
Leap years according to Gregorian calendar rules
.TP
\(bu
Variable month lengths (28-31 days)
.TP
\(bu
February 29 boundary conditions in non-leap years
.TP
\(bu
Year and month overflow normalization
.TP
\(bu
Iterative calculation for very large year values (>100) to prevent overflow
.TP
\(bu
Safe handling of extreme dates spanning centuries
.SH EXIT STATUS
.TP
.B 0
File is older than specified period (success)
.TP
.B 1
Invalid arguments or file is not older than specified period
.TP
.B 2
File not found
.TP
.B 3
File access error (permissions, I/O error)
.TP
.B 4
Invalid parameter combination
.TP
.B 5
Invalid parameter value (negative numbers, overflow, non-numeric input)
.SH EXAMPLES
.TP
Check if file is older than default 6 months:
.B isOlderThan /path/to/file
.TP
Check if file is older than 30 days:
.B isOlderThan /path/to/file \-days 30
.TP
Check if file is older than 2 weeks:
.B isOlderThan /path/to/file \-weeks 2
.TP
Check if file is older than 1 year and 6 months:
.B isOlderThan /path/to/file \-years 1 \-months 6
.TP
Check with exact current time reference:
.B isOlderThan /path/to/file \-months 3 \-exact
.TP
Use in shell script for cleanup:
.nf
.RS
if isOlderThan "$HOME/temp/cache.dat" \-days 7; then
    rm "$HOME/temp/cache.dat"
    echo "Removed old cache file"
fi
.RE
.fi
.TP
Advanced batch processing in shell scripts:
.nf
.RS
# Process multiple files with error handling
for file in /var/log/*.log; do
    if isOlderThan "$file" \-weeks 2 2>/dev/null; then
        echo "Archiving old log: $file"
        gzip "$file"
    elif [ $? \-eq 2 ]; then
        echo "Warning: Cannot access $file"
    fi
done
.RE
.fi
.TP
Backup validation with multiple criteria:
.nf
.RS
# Check if any backup is too old
backup_files=("/backups/daily.tar.gz" "/backups/weekly.tar.gz")
for backup in "${backup_files[@]}"; do
    if isOlderThan "$backup" \-days 7; then
        echo "ALERT: Backup $backup is older than 7 days!"
        exit 1
    fi
done
echo "All backups are current"
.RE
.fi
.TP
File cleanup with size and age criteria:
.nf
.RS
# Clean cache files older than 30 days
find /tmp/cache \-type f \-name "*.cache" | while read file; do
    if isOlderThan "$file" \-days 30; then
        size=$(stat \-c%s "$file")
        rm "$file"
        echo "Deleted: $file ($(($size/1024))KB)"
    fi
done
.RE
.fi
.SH ERROR HANDLING
Enhanced error handling provides specific feedback:
.TP
.B Parameter Validation Errors
"Error: \-days value must be a number" \- for non\-numeric input
.br
"Error: \-days value out of range (1\-365000)" \- for overflow or invalid range
.br
"Error: \-years value out of range (1\-1000)" \- for unrealistic years
.br
"Error: Mixed string '30abc' not allowed" \- for invalid mixed input
.TP
.B File Access Errors
Detailed error messages include system error descriptions using strerror()
.br
"Error: File not found: /path/to/file"
.br
"Error: Cannot access file: /path/to/file (Permission denied)"
.TP
.B Combination Errors
"Error: \-days excludes all other time parameters"
.br
"Error: When combined with \-years, \-months can have maximum value of 11"
.TP
.B Extreme Value Protection
"Error: Cannot calculate reference time (values too extreme)" \- prevents crashes from unrealistic date calculations
.SH PERFORMANCE
.TP
.B Memory Management
Efficient argument parsing with proper memory cleanup and overflow protection. No memory leaks during batch processing operations.
.TP
.B Large Value Handling
For years > 100, the program uses iterative calculation to prevent arithmetic overflow. Safe handling of extreme time periods.
.TP
.B File Processing
Optimized for batch processing of multiple files in scripts. Typically processes 50+ files per second on modern systems.
.TP
.B Scalability
Tested with hundreds of files without memory leaks or performance degradation. Consistent execution time regardless of file ages.
.SH DEBUGGING
.TP
.B Verbose Output
When built with DEBUG flag, the program provides detailed information about:
.TP
\(bu
Argument parsing steps and validation results
.TP
\(bu
File time retrieval and reference time calculation
.TP
\(bu
Calendar arithmetic operations for complex date calculations
.TP
\(bu
Memory allocation and cleanup operations
.TP
.B Testing Mode
When TESTING preprocessor flag is defined, additional validation and error checking is enabled for development purposes.
.TP
.B Common Issues
Check file permissions if receiving "File access error"
.br
Use absolute paths to avoid confusion with relative path resolution
.br
Verify file exists before processing in batch scripts
.br
Quote paths containing spaces: isOlderThan "/path/with spaces/file.txt"
.SH DEVELOPMENT
.TP
.B Building from Source
Complete Xcode project available with unit tests and library targets. Cross\-platform Makefile supports Unix, Linux, Mac, and Windows (MinGW).
.TP
.B Testing Framework
Comprehensive XCTest suite covering:
.br
\- Calendar arithmetic edge cases and leap year handling
.br
\- File access scenarios and permission testing
.br
\- Integration tests with real files and batch operations
.br
\- Performance and memory usage validation
.br
\- Unicode filename support and special character handling
.TP
.B Library Integration
Available as static library (libIsOlderThanLib.a) for embedding in other projects. Header file (isOlderThan.h) provides function prototypes for integration.
.TP
.B Build Targets
Command\-line tool, static library, unit test bundle, and universal binary support for Intel and Apple Silicon platforms.
.SH TECHNICAL DETAILS
.SS Calendar Arithmetic
The program implements proper calendar arithmetic:
.TP
\(bu
Leap year calculation: (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)
.TP
\(bu
Month addition handles varying month lengths correctly
.TP
\(bu
February 29 dates are adjusted to February 28 in non\-leap years
.TP
\(bu
All calculations use local system timezone and respect DST changes
.TP
\(bu
Overflow protection for extreme date calculations
.SS File Time Retrieval
File modification times are retrieved using the POSIX \fBstat()\fR system call, ensuring compatibility across Unix\-like systems while maintaining nanosecond precision where available.
.SS Input Validation
Enhanced validation using \fBstrtol()\fR instead of \fBatoi()\fR provides:
.TP
\(bu
Complete string validation (detects mixed alphanumeric input)
.TP
\(bu
Overflow detection for values exceeding INT_MAX
.TP
\(bu
Proper error reporting with specific error messages
.TP
\(bu
Leading zero handling without octal interpretation
.SH PLATFORM COMPATIBILITY
.TP
.B Unix/Linux
Native support using POSIX APIs with enhanced error handling
.TP
.B macOS
Full compatibility with Darwin\-specific extensions and universal binary support
.TP
.B Windows
Supported via MinGW compiler with Windows\-specific adaptations and UTF\-8 filename support
.SH FILES
.TP
.B /usr/local/bin/isOlderThan
Default installation location for the executable
.TP
.B /usr/local/share/man/man1/isOlderThan.1
This manual page
.TP
.B /usr/local/include/isOlderThan.h
Header file for library integration (when installed with development package)
.TP
.B /usr/local/lib/libIsOlderThanLib.a
Static library for integration into other projects (when installed with development package)
.SH ENVIRONMENT
The program respects the system's timezone settings and locale for time calculations. Environment variables affecting timezone (TZ) and locale (LC_TIME) are honored.
.SH DIAGNOSTICS
Error messages are written to standard error (stderr) and include:
.TP
\(bu
File access problems with specific error descriptions and suggested solutions
.TP
\(bu
Parameter validation errors with exact input that caused the error
.TP
\(bu
Calendar arithmetic edge cases with explanations
.TP
\(bu
Performance warnings for extremely large time values
.SH BUGS
Report bugs to the project maintainer. Include platform information, exact command line used, expected vs. actual behavior, and any error messages. For performance issues, include file count and typical processing times.

When reporting issues:
.TP
\(bu
Provide complete command line and error output
.TP
\(bu
Include file permissions and ownership (ls \-la)
.TP
\(bu
Specify platform and compiler version
.TP
\(bu
Include sample files for reproduction when possible
.SH AUTHOR
Written as a cross\-platform file age verification tool following C99 standards. Developed with comprehensive testing and professional build system integration.
.SH COPYRIGHT
This program is provided as\-is for educational and practical use. See LICENSE file in source distribution for complete terms.
.SH SEE ALSO
.BR find (1),
.BR stat (1),
.BR touch (1),
.BR ls (1),
.BR test (1),
.BR make (1)

For additional documentation, source code, and development information, visit the project repository.

.SH VERSION HISTORY
.TP
.B Version 1.0
Initial release with enhanced input validation, comprehensive error handling, performance optimizations, and professional documentation.
